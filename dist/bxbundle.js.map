{"version":3,"sources":["webpack:///bxbundle.js","webpack:///webpack/bootstrap dec2586f8d458be31206","webpack:///./src/index.js","webpack:///./src/api/userApi.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/api/baseURL.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","_userApi","getUsers","then","result","userBody","console","log","forEach","user","firstName","lastName","email","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","delUser","attributes","value","row","parentNode","removeChild","this","_interopRequireDefault","obj","__esModule","default","get","del","url","fetch","baseURL","onSuccess","onError","request","Request","method","resp","json","err","Object","defineProperty","_baseURL","_baseURL2","self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","map","append","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","ArrayBuffer","Error","set","type","rejected","text","decode","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","input","options","credentials","mode","referrer","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","e","list","push","values","getAll","has","hasOwnProperty","callback","thisArg","keys","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","XMLHttpRequest","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","getBaseURL","getQueryStringParameterByName","window","href","regex","RegExp","results","exec"],"mappings":"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","file":"bxbundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\tvar _userApi = __webpack_require__(2);\n\t\n\t(0, _userApi.getUsers)().then(function (result) {\n\t  var userBody = \"\";\n\t  console.log(\"index.js getUsers().then called\");\n\t\n\t  /*\n\t   * herf=\"#\" means the link is referencing to the top of the page.\n\t   * Personally I guess this is a technique to catch the user click event without\n\t   * taking the users out from the page, and without causing a refresh.\n\t   */\n\t  result.forEach(function (user) {\n\t    userBody += \"<tr>\\n    <td><a href=\\\"#\\\" data-id=\\\"\" + user.id + \"\\\" class=\\\"deleteUser\\\">DEL</a></td>\\n    <td>\" + user.id + \"</td>\\n    <td>\" + user.firstName + \"</td>\\n    <td>\" + user.lastName + \"</td>\\n    <td>\" + user.email + \"</td>\\n    </tr>\";\n\t  });\n\t\n\t  global.document.getElementById('users').innerHTML = userBody;\n\t  // debugger; // eslint-disable-line no-debugger\n\t\n\t  var deleteLinks = global.document.getElementsByClassName(\"deleteUser\");\n\t\n\t  // console.log(`index.js - deleteLinks = ${deleteLinks}`);\n\t\n\t  // must use Array.from to create a real array from a DOM collection\n\t  // getElementByClassName only returns an \"array-like\" object\n\t\n\t  // BX: Make sure it is link.onclick instead of link.onClick!!!!\n\t  Array.from(deleteLinks, function (link) {\n\t    link.onclick = function (event) {\n\t      var element = event.target;\n\t      event.preventDefault();\n\t      (0, _userApi.delUser)(element.attributes[\"data-id\"].value);\n\t      var row = element.parentNode.parentNode;\n\t      row.parentNode.removeChild(row);\n\t      console.log(\"index.js - id = \" + element.attributes[\"data-id\"].value + \" on call function hit\");\n\t    };\n\t    console.log(\"index.js - link = \" + link + \", data-id= \" + link.attributes[\"data-id\"].value);\n\t  });\n\t}); /*\n\t    import _numeral from 'numeral';\n\t    import './index.css'; // css file can not be in upper layer '../index.css', guess it is for security reason.\n\t    \n\t    const myValue = _numeral(20000).format('$0,0.00');\n\t    \n\t    console.log(`the test costs ${myValue}`); // eslint-disable-line no-console\n\t    // single line exception for eslint //\n\t    */\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getUsers = getUsers;\n\texports.delUser = delUser;\n\t\n\t__webpack_require__(3);\n\t\n\tvar _baseURL = __webpack_require__(4);\n\t\n\tvar _baseURL2 = _interopRequireDefault(_baseURL);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar baseURL = (0, _baseURL2.default)();\n\t/* eslint-disable no-console */\n\t\n\tfunction getUsers() {\n\t  return get('users');\n\t}\n\t\n\tfunction delUser(id) {\n\t  console.log(\"userApi.js - delUser(url) called\");\n\t  return del('users/' + id);\n\t}\n\t\n\tfunction get(url) {\n\t  // console.log(\"userApi.js - get(url) called\");\n\t  return fetch(baseURL + url).then(onSuccess, onError);\n\t}\n\t\n\tfunction del(url) {\n\t  console.log(\"userApi.js - del(url) called\");\n\t\n\t  var request = new Request(baseURL + url, {\n\t    method: 'DELETE'\n\t  });\n\t\n\t  return fetch(request).then(onSuccess, onError);\n\t}\n\t\n\tfunction onSuccess(resp) {\n\t  return resp.json();\n\t}\n\t\n\tfunction onError(err) {\n\t  console.log(err); // eslint-disable-line no-console\n\t}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getBaseURL;\n\tfunction getBaseURL() {\n\t  /*\n\t  const inDevelopment = window.location.hostname === 'localhost';\n\t  return inDevelopment ? \"http://localhost:9091/\" : \"/\";\n\t  */\n\t  /*\n\t  * changes introduced in the production build section\n\t  */\n\t  return getQueryStringParameterByName('mockObj') ? \"http://localhost:9091/\" : \"/\";\n\t}\n\t\n\tfunction getQueryStringParameterByName(name, url) {\n\t  if (!url) url = window.location.href;\n\t\n\t  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t      results = regex.exec(url);\n\t\n\t  if (!results) return null;\n\t\n\t  if (!results[2]) return '';\n\t\n\t  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bxbundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dec2586f8d458be31206","/*\nimport _numeral from 'numeral';\nimport './index.css'; // css file can not be in upper layer '../index.css', guess it is for security reason.\n\nconst myValue = _numeral(20000).format('$0,0.00');\n\nconsole.log(`the test costs ${myValue}`); // eslint-disable-line no-console\n// single line exception for eslint //\n*/\n\nimport {getUsers, delUser} from './api/userApi';\n\ngetUsers().then(result =>{\n  let userBody = \"\";\n  console.log(\"index.js getUsers().then called\");\n\n\n  /*\n   * herf=\"#\" means the link is referencing to the top of the page.\n   * Personally I guess this is a technique to catch the user click event without\n   * taking the users out from the page, and without causing a refresh.\n   */\n  result.forEach(user => {\n    userBody+=`<tr>\n    <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">DEL</a></td>\n    <td>${user.id}</td>\n    <td>${user.firstName}</td>\n    <td>${user.lastName}</td>\n    <td>${user.email}</td>\n    </tr>`\n  });\n\n  global.document.getElementById('users').innerHTML = userBody;\n  // debugger; // eslint-disable-line no-debugger\n\n  const deleteLinks = global.document.getElementsByClassName(\"deleteUser\");\n\n  // console.log(`index.js - deleteLinks = ${deleteLinks}`);\n\n  // must use Array.from to create a real array from a DOM collection\n  // getElementByClassName only returns an \"array-like\" object\n\n  // BX: Make sure it is link.onclick instead of link.onClick!!!!\n    Array.from(deleteLinks, link => {\n    link.onclick = function(event){\n      const element = event.target;\n      event.preventDefault();\n      delUser(element.attributes[\"data-id\"].value);\n      const row = element.parentNode.parentNode;\n      row.parentNode.removeChild(row);\n      console.log(`index.js - id = ${element.attributes[\"data-id\"].value} on call function hit`);\n    };\n    console.log(`index.js - link = ${link}, data-id= ${link.attributes[\"data-id\"].value}`);\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import 'whatwg-fetch';\n/* eslint-disable no-console */\n\nimport getBaseURL from './baseURL';\nconst baseURL = getBaseURL();\n\nexport function getUsers(){\n  return get('users');\n}\n\nexport function delUser(id){\n  console.log(\"userApi.js - delUser(url) called\");\n  return del(`users/${id}`);\n}\n\nfunction get(url){\n  // console.log(\"userApi.js - get(url) called\");\n  return fetch(baseURL + url).then(onSuccess, onError);\n}\n\nfunction del(url){\n  console.log(\"userApi.js - del(url) called\");\n\n  const request = new Request(baseURL + url, {\n    method: 'DELETE'\n  });\n\n  return fetch(request).then(onSuccess, onError);\n}\n\nfunction onSuccess(resp){\n  return resp.json();\n}\n\nfunction onError(err){\n  console.log(err); // eslint-disable-line no-console\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/userApi.js","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 3\n// module chunks = 0","export default function getBaseURL(){\n  /*\n  const inDevelopment = window.location.hostname === 'localhost';\n  return inDevelopment ? \"http://localhost:9091/\" : \"/\";\n  */\n  /*\n  * changes introduced in the production build section\n  */\n  return getQueryStringParameterByName('mockObj')?\"http://localhost:9091/\":\"/\";\n}\n\nfunction getQueryStringParameterByName(name, url){\n  if (!url)\n    url = window.location.href;\n\n  name = name.replace(/[\\[\\]]/g,\"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n\n  if(!results)\n    return null;\n\n  if(!results[2])\n    return '';\n\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/baseURL.js"],"sourceRoot":""}